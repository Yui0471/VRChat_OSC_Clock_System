【Digital Display System Betatest Version 1.2】

最終更新 : 2022/03/15 風庭ゆい
開発協力 : 味醂


【はじめに】----------------------------

　本データはVRChat想定のアバターにセットアップし、
　OSC送信を介してPCのローカル時間をアバターに表示させるものです。
　時刻表示の他、汎用的なデジタルディスプレイとしても使用できます。
　(現在開発検討中)


【利用規約】----------------------------

・本データの使用によって生じた何らかのトラブル、損失について
　製作者である風庭ゆいは一切の責任を負わないものとします。

・改造は自由です。

・本データの再配布、販売を禁止します。

・本データを使用する際のクレジット表記は必要ありません。


【同梱ファイル】----------------------------

　Digital_Display_system_betaV1

　・DDS_OSC_Clock.exe
　　OSC送信を担当するアプリケーションです。
　　１秒おきに現在時刻を送信します。
　　使用する際はウインドウの指示に従ってください。

　・DDS_OSC_Clock.py
　　exeアプリケーションのコンパイル前のスクリプトです。
　　Python3とPython-OSCが導入されている機器で動作します。

　・Digital_Display_System_betatestV1.unitypackage
　　アバターセットアップ用UnityPackageです。
　　以下に記述するセットアップにて使用します。

　・ReadMe.txt
　　本ファイルです。

　・texture
　　改変用テクスチャファイルです。


【基本仕様】----------------------------

　マテリアル数：5
　パラメータ数：5
　メモリ占有数：33
　テクスチャ数：1

　Unity2019.4.31.f1 動作確認済
　VRCSDK3-AVATAR-2022.02.16.19.13_Public 動作確認済


　・パラメータについて

　　-DD_thp (int): 千の位を制御します。int0~9で任意の数字を表示できます。
　　-DD_hp (int): 百の位を制御します。int0~9で任意の数字を表示できます。
　　-DD_tp (int): 十の位を制御します。int0~9で任意の数字を表示できます。
　　-DD_op (int): 一の位を制御します。int0~9で任意の数字を表示できます。

　　-DD_ONOFF (bool): オブジェクト自体のIsActiveを操作します。


【セットアップ方法】----------------------------

1.VRCSDK3とアバターのパッケージ、その他必要なアセットをインポートしてください。

2.同梱の[Digital_Display_System_betatestV1.unitypackage]をインポートします。

3.Asset以下にDD_Watch_Systemファイルがセットアップされますので参照してください。

4.[Digital_Display.prefab]ファイルをヒエラルキーにドラッグアンドドロップし、
　アバターのルートオブジェクトの子に置いてください。

※ルートオブジェクトの子以外の場所(孫やArmature以下のボーンなど)に置くと、
　アニメーションの参照がMissingになり正常に動作しません。

5.Digital_Displayオブジェクトを表示させたい位置へ移動させ、
　追従させたいボーンの子に[Digital_Display_constraint_Point]を移動させます。

6.Digital_Displayオブジェクトに[Parent Constraint]コンポーネントがあるので、
　[Zero]をクリックして位置を初期化します。

7.[FX_Layer_Sample]ファイルがありますので、
　そこからアバターのFXレイヤーのLayer及びParametersへコピーを行ってください。
　※ParametersはEXParameter_Sampleに型の表記がありますのでそちらを参照してください。

8.[EXParameter_Sample]ファイルがありますので、
　各項目をアバターのExpressionParametersへ追加してください。

9.[EXMenu_Sample]ファイルがありますので、
　そちらを参考にアバターのEXMenuへボタンを追加してください。

10.[Digital_Display]オブジェクトのチェックを外し、非表示状態にします。

9.セットアップ完了です。VRChatへアップロードを行ってください。


【使い方】----------------------------

1.VRChatが起動しているPCでDDS_OSC_Clock.exeを実行します。
　※起動している間、OSCを送信し続けます。

2.セットアップ済みのアバターに着替えて、EXMenuからOSCを有効化しておきます。

3.VRChatがOSCを受信し、アバターのディスプレイ部分に現在時刻が表示されます。

4.アプリケーション終了時はCtrl+Cを押下すると終了します。


【更新履歴】----------------------------

〇2022/03/13 【Betatest Version 1.0】
-とりあえずこうめちゃんから抜き出したままをそのままパッケージ化。

〇2022/03/13 【Betatest Version 1.01】
-exeアプリケーションのアドレスを間違えてた！　修正。

〇2022/03/13 【Betatest Version 1.02】
-アプリケーションの初期メッセージにバージョンを記載することにしました。

〇2022/03/13 【Betatest Version 1.03】
-Dotの存在を忘れてた！　Dotの点滅を修正。

〇2022/03/14 【Betatest Version 1.1】
-EXMenuからディスプレイのオンオフを制御するように。
-オブジェクトの初期位置を原点になるように調整。
-アプリケーションからオブジェクトのオンオフ制御を削除。
-Dotを正しく点滅するように修正。

〇2022/03/14 【Betatest Version 1.1.1】
-gitで管理開始。

〇2022/03/14 【Betatest Version 1.2】
-テクスチャを整理。
-UVスクロールの数値変更、アニメーションファイルの置き換え。
-AIファイルの同梱。


【実装検討リスト】----------------------------

-PhotoshopやClipStudioなどで好きなフォントへ変更可能にする
-シェーダーをUnlitからSunaoShaderへ移行、Emissionなどの対応
-タイマー、カウントダウンなどの機能を実装
-コンストレイントを使用しないセットアップを検討
-自動セットアップを可能にし、ワンクリックでレイヤーやパラメータへ追加できるようにする
-パラメータ数を減らす
-アプリケーションのGUI化(送信スタート、ストップボタンの実装)
-IPとアドレスを簡単に変更できるようにする
-Quest対応の検討(Constraintとtransparentを廃止する)
-noteで実装説明を書く


【実装完了リスト】----------------------------

-EXMenuからディスプレイのオンオフなどを操作する[V1.1完了]
-Constraint用オブジェクトがなぜか離れた位置にいるのを修正したい[V1.1完了(みりんさんありがとう)]
-テクスチャの整理[V1.2完了]
-アナログ時計の開発[V1.2完了]

【開発環境】----------------------------

-Windows 10 Home 21H1 Build 19041-SP0
-Python 3.8.2
-python-osc 1.8.0
-PyInstaller 4.9
-Visual Studio Code 1.65.2

